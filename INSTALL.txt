Описание процесса сборки genus
---------------------------------------------------

Для сборки необходим CMAKE >= 2.6
http://www.cmake.org/

Сборка под Windows проводилось с использованием Visual Studio 2008

Зависимости
--------------------
PYTHON 2.6
Качаем инсталлер с www.python.org

BOOST
Пробовал на 1.39
Для windows можно скачать инсталлер отсюда http://www.boostpro.com/download
Нужна только подбиблиотека BOOST.PYTHON
Качаем различные варианты бинарников этой подбиблиотеки.

ANTLR
Качаем отсюда http://www.antlr2.org/. Опробован вариант версии 2.7.7 в исходниках.
Был собиран в виде static library согласно README, неходящемуся в папке с исходниками

Lib ICONV
Качаем оттсюда http://gnuwin32.sourceforge.net/packages/libiconv.htm и ставим libiconv-1.9.2-1.exe
Опробован вариант скачивания готовой библиотеки.

CPP UNIT
Качаем отсюда http://cppunit.sourceforge.net/
В составе есть студийный солюшн. Собираем.

Berkley Database
Качаем отсюда. Опробована версия 4.7.25
http://www.oracle.com/technology/software/products/berkeley-db/index.html
Опробован вариант сборки из исходников.

Сборка
---------------
Находясь в папке genus запускаем cmake-gui (для UNIX можно cmake).

Под unix все пути должны найтись, если необходимые библиотеки были установлены.

Под Winows:

  В качестве путей в двух верхник полях вводим полный путь до genus.

  Пробуем сделать CONFIGURE. Дозаполняем оставшиеся INCLUDE пути и LIB'ы руками.
  В качестве BOOST_PYTHON_LIB выбираем под windows boost_python-vc90-mt-gd-1_39.lib

  После полного успеха CONFIGURE делаем GENERATE.

  Открываем созданный солюшн в VISUAL STUDIO 2008

  Билдим.
  boost_python-vc90-mt-gd-1_39.dll cppunitd_dll.dll libdb47d.dll libiconv2.dll переносим в c:\Python26\DLLs\
  CModule.dll, переименованный в CModule.pyd кладем сюда же.

---------------------

Пока все вот так коряво.
1. Будет здорово, если кто-нибудь попробует под Windows не собирать зависимости из исходников, а использовать скаченные готовые 
библиотеки (основные проблемы с различными типами сборок библиотек: multi-thread debug, multi-thread debug dll и т.п.).
2. Разузнает куда по-хорошему нужно класть внешние модули Python (под Unix и Windows) и их зависимости под Windows
